---
import type { HTMLTag, Polymorphic } from "astro/types";

type Props<Tag extends HTMLTag> = Polymorphic<{
  as: Tag;
  variant: keyof typeof variantClasses;
}>;

const { as: Tag, class: className, variant, color, ...props } = Astro.props;

const variantClasses: { [key: string]: string } = {
  h2: "text-2xl font-semibold uppercase md:text-2xl",
  h3: "text-3xl md:text-5xl font-semibold uppercase font-sora",
  body: "text-2xl font-semibold",
  medium: "text-md",
  small: "text-sm",
  big: "text-6xl uppercase",
  bigger: "text-4xl sm:text-5xl md:text-7xl uppercase",
};

const colorClasses = {
  white: "text-white",
  black: "text-black",
  neutral: "text-slate-50",
  title_green: "text-chalet-green-600",
  subtitle_green: "text-chalet-green-500"
};

const classes = [
  variantClasses[variant as keyof typeof variantClasses],
  colorClasses[color as keyof typeof colorClasses],
  className,
];
---

<Tag class:list={classes} {...props} tabindex="0">
  <slot />
</Tag>